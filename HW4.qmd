---
title: "Homework 4"
author: "Sonya Eason"
format: pdf
editor: visual
---
```{r}
if (!require(pacman)) install.packages("pacman")
pacman::p_load(knitr, broom, tidyverse)
```


```{r}
library(tidyverse)
library(knitr)
library(broom)
```
```{r}
crab <- read_csv("data/crab.csv")

ambiguity <- read_csv("data/ambiguity.csv")
```




## Exercise 1

a) The response is the mean value of fisher caught per week by each visitor. 

b) The possible values are 0, 1, 2, 3, up to the maximum number fish there are in the state wildlife park. 

c) Lambda represents the mean number of fish caught per wekk. 

d) A zero-inflated model could be considered here since there are likely a lot of zeroes representing people who caught zero fish during their stay. These zeroes can be separated into two subgroups the people who never fish, i.e. the true zeroes., and those who just didn't fish on their trips this time.

## Exercise 2

a)
```{r}
crab <- crab |>
  mutate(
    Color = factor(Color),
    Spine = factor(Spine)
  )
```

```{r}
ggplot(crab, aes(x = Satellite)) +
  geom_histogram()
```
Is there preliminary evidence the number of satellites could be modeled
as a Poisson response? Briefly explain

In a Poisson response, we do expe...

b)
```{r}
sat_model <- glm(Satellite ~ Width + Weight + Spine, family = poisson, data = crab)


sat_model |>
  tidy(conf.int = T) |>
  kable(digits = 3)
```


c) When a female crab has one worn or broken spine, the number of satellites is expected to change by a multiplicative factor of `{r} exp(-0.214)`compared to when the female crab has two spines that are both in good condition, holding all else constant. When a female crab has two worn or broken spines, the number of satellites is expected to change by a multiplicative factor of `{r} exp(-0.049)`compared to when the female crab has two spines that are both in good condition, holding all else constant. 


## Exercise 3

```{r}
crab |>
  group_by(Spine) |>
  summarize(mean = mean(Satellite),
            var = var(Satellite))
```

A quasi-Poisson regression is suitable because there is evidence of overdispersion seen by variances that are larger than means at each level. In a typical Poisson model, we'd expect mean = variance, so we'd use quasi-Poison to account for the fact that that does not hold here.  

b)

```{r}
sat_model_2 <- glm(Satellite ~ Width + Weight + Spine, family = quasipoisson, data = crab)

sat_model_2 |>
tidy(conf.int = TRUE) |>
  kable(digits = 3)

```
c)

```{r}
se <- tidy(sat_model)$std.error

se_overdis <- tidy(sat_model_2)$std.error

dispersion_param <- (se_overdis/se)^2

dispersion_param
```
The estimated dispersion parameter is 3.169448. 


d) The estimated coefficients do not change at all between this model and the previous one while the standard errors increase by a multiplicative factor of `{r} exp(3.169448)`

## Exercise 4

a)

```{r}
pois_samples <- rpois(10000, 1.5)

hist(pois_samples)
mean(pois_samples)
var(pois_samples)
```
Our mean and variance are 1.48 and 1.47 respectively, which is closed to our theoretical mean and variance of $\lambda$ = 1.5.


```{r}
gamma_samples <- rgamma(10000, 3, 2)
hist(gamma_samples)
```

```{r}
pois_samples_two <- rpois(10000, gamma_samples)
hist(pois_samples_two)
mean(pois_samples_two)
var(pois_samples_two)
```

The variance is larger here, while the mean is pretty similar, only slightly larger. Our histogram makes our distribution appear less symmetric than it did before. 

b)
In class, we showed that if we have 

$$
\lambda \sim gamma(r, \frac{p}{1-p})
$$
$$
Y|\lambda \sim Poisson(\lambda)
$$

Then, we can say that


$$
Y \sim NegBinom(r, p)
$$
If we have a 
$$
\lambda \sim Gamma(3, 2)
$$
Then, it's clear that 
$r=3$ and $\frac{p}{1-p} = 2$.

Some minor algebra makes it clear that $p = \frac{2}{3}$.


```{r}
negbn_samples <- rnbinom(10000, 3, 2/3)

hist(negbn_samples)
mean(negbn_samples)
var(negbn_samples)
```

The histogram for the NegBinom(3, 2/3) appears very similar to our Poisson-Gamma distribution. The mean and variance values are also very similar.


c)

I will make the mathematical argument that $Y \sim NegBinom(r, p)$ is equivalent to sampling from $Y|\lambda \sim Poisson(\lambda)$ where $\lambda \sim Gamma(r, \frac{p}{1-p})$

This can be shown by deriving the marginal density of Y. 


$$

f_Y = \int f_{Y,\lambda} \, d\lambda

$$

$$
= \int f_Y f_\lambda \, d\lambda
$$

$$
= \int \frac{\lambda^Y e^{-\lambda}}{y!} \cdot \frac{(\frac{p}{1-p})^r}{\Gamma(r)} \cdot \lambda^{r-1}\cdot e^{-(\frac{p}{1-p})\lambda}d\lambda
$$

$$
= \frac{\left(\frac{p}{1-p}\right)^r}{y! \, \Gamma(r)} \int \lambda^{y+r-1} e^{-\left( 1 + \frac{p}{1-p} \right)\lambda} \, d\lambda
$$




We can utilize the kernel rule to rearrange and find that. 

$$
=\frac{(y+r-1)!}{y!(r-1)!}p^r(1-p)^y
$$
This is equivalent to 

$$
Y \sim NegBinom(r, p)
$$

## Exercise 5

a)

```{r}
ambiguity <- read_csv("data/ambiguity.csv")
```


```{r}

ggplot(ambiguity, aes(x = totalIssuePages)) +
  geom_histogram(binwidth = 1)
```

We might consider using a hurdle model because the number of zeroes is very large, more so than we would expect in a Poisson model. A zero-inflated model is not appropriate because ZIP assumes that the zeroes are comprised of two different groups-- the true always zeoroes and the zeroes on occasion. Here, the context of our observations doesn't indicate that this sort of analysis would make senes. We are counting number of issues candidates commented on, so there are not really two groups of zeroes since the study involves every statement a candidate made, not just on a single occasion.

b)
```{r}
amb <- ambiguity |>
  mutate(at_least_one = ifelse(totalIssuePages > 0, 1, 0)) |>
  filter(!is.na(totalIssuePages))


```
```{r}
amb |>
  group_by(democrat) |>
  summarize(log_odds = log(mean(at_least_one)/(1-mean(at_least_one))))
```


```{r}
amb_two <- ambiguity |>
  mutate(at_least_one = ifelse(totalIssuePages > 0, 1, 0)) |>
  filter(!is.na(totalIssuePages))

amb_two |>
  group_by(ideology) |>
  summarize(log_odds = log(mean(at_least_one)/(1-mean(at_least_one))))
```

IDK
https://chatgpt.com/c/67b0fa80-9000-8011-94cd-a67009bb262c

need help with visualization

c)
```{r}
install.packages("pscl")  
library(pscl)

```

```{r}
hurdle(totalIssuePages ~ ideology + democrat, dist = "poisson", data = ambiguity) 
```
Interpret ideology - 

For candidates that commented on at least one issue, for each unit increase in ideology, the mean number of issues commented on is expected to change by a multiplicative factor of `{r} exp(-0.005902)`, holding party status constant. 

The odds that a candidate spoke on zero issues changes by a multiplicative factor `{r} exp(0.5746)` for each unit increase in ideology, holding party status constant. 


d)
```{r}
hurdle(totalIssuePages ~ ideology + democrat + ideology*democrat, dist = "poisson", data = ambiguity)
```

For democrat candidates that commented on at least one issue, the mean number of issues a candidate spoke on is expected to change by a multiplicative factor of `{r} exp(-0.07592+0.03387)` for each unit increase in ideology. 

The odds that a candidate spoke on zero issues changes by a multiplicative factor `{r} exp(-1.3995+1.3667)` for each unit increase in ideology, which is `{r} exp(-1.3995)` times the multiplicative rate of change we'd expect for a candidate who is not a democrat. 
